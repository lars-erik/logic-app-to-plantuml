{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Detect_Sentiment_(V2)": {
                "inputs": {
                    "body": {
                        "documents": [{
                            "id": "@{guid()}",
                            "language": "en",
                            "text": "@triggerBody()"
                        }]
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/v2/text/analytics/v2.1/sentiment"
                },
                "runAfter": {
                    "Initialize_neutral_message": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Initialize_neutral_message": {
                "inputs": {
                    "variables": [{
                        "name": "Message",
                        "type": "string",
                        "value": "Hello and welcome!"
                    }]
                },
                "runAfter": {
                    "Initialize_neutral_mood": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_neutral_mood": {
                "inputs": {
                    "variables": [{
                        "name": "Mood",
                        "type": "string",
                        "value": "Neutral"
                    }]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Is_sentiment_happy": {
                "actions": {
                    "Set_happy": {
                        "inputs": {
                            "name": "Mood",
                            "value": "Happy"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                    }
                },
                "else": {
                    "actions": {
                        "Is_sentiment_sour": {
                            "actions": {
                                "Set_sour": {
                                    "inputs": {
                                        "name": "Mood",
                                        "value": "Sour"
                                    },
                                    "runAfter": {},
                                    "type": "SetVariable"
                                }
                            },
                            "expression": {
                                "and": [{
                                    "lessOrEquals": [
                                        "@float(outputs('Store_sentiment'))",
                                        0.3
                                    ]
                                }]
                            },
                            "runAfter": {},
                            "type": "If"
                        }
                    }
                },
                "expression": {
                    "and": [{
                        "greaterOrEquals": [
                            "@float(outputs('Store_sentiment'))",
                            0.7
                        ]
                    }]
                },
                "runAfter": {
                    "Store_sentiment": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Response": {
                "inputs": {
                    "body": "@{variables('Message')} (@{outputs('Store_sentiment')})",
                    "statusCode": 200
                },
                "kind": "http",
                "runAfter": {
                    "Set_response_message": [
                        "Succeeded"
                    ]
                },
                "type": "Response"
            },
            "Set_response_message": {
                "cases": {
                    "Happy": {
                        "actions": {
                            "Set_happy_message": {
                                "inputs": {
                                    "name": "Message",
                                    "value": "How nice! Hello, and welcome you shall be!"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "case": "Happy"
                    },
                    "Sour": {
                        "actions": {
                            "Set_sour_message": {
                                "inputs": {
                                    "name": "Message",
                                    "value": "Now that's rude! Well, welcome anyway."
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "case": "Sour"
                    }
                },
                "default": {
                    "actions": {}
                },
                "expression": "@variables('Mood')",
                "runAfter": {
                    "Is_sentiment_happy": [
                        "Succeeded"
                    ]
                },
                "type": "Switch"
            },
            "Store_sentiment": {
                "inputs": "@float(coalesce(body('Detect_sentiment_(V2)')?['documents']?[0]?['score'], '0.5'))",
                "runAfter": {
                    "Detect_Sentiment_(V2)": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "manual": {
                "inputs": {
                    "schema": {
                        "type": "string"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "cognitiveservicestextanalytics": {
                    "connectionId": "-",
                    "connectionName": "cognitiveservicestextanalytics",
                    "id": "-"
                }
            }
        }
    }
}